from typing import Optional
import disnake
from disnake.ext import commands

class Confirm(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=10.0)
        self.value = Optional[bool]
    
    @disnake.ui.button(label="–ì–æ", style=disnake.ButtonStyle.green, emoji="ü§£")
    async def confirm(self, button: disnake.ui.Button, inter: disnake.CommandInteraction):
        await inter.response.send_message("–ë—Ä—É—Ö üíÄ", ephemeral=True)
        self.value = True
        self.stop()
    
    @disnake.ui.button(label="–†–∞—Ç–∏–æ", style=disnake.ButtonStyle.red, emoji="ü•±")
    async def cancel(self, button: disnake.ui.Button, inter: disnake.CommandInteraction):
        await inter.response.send_message("–ê–¥—å–æ—Å üôÇ", ephemeral=True)
        self.value = False
        self.stop()

class Dropdown(disnake.ui.StringSelect):
    def __init__(self):
        options = [
            disnake.SelectOption(label="–ö—Ä–∞—Å–Ω—ã–π", description="–ê–∫—Ç–∏–≤–Ω—ã–π –∫–∞–∫ –æ–≥–æ–Ω—å.", emoji="üî¥"),
            disnake.SelectOption(label="–ñ—ë–ª—Ç—ã–π", description="–£—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã–π –∫–∞–∫ –∑–µ–º–ª—è.", emoji="üü°"),
            disnake.SelectOption(label="–ó–µ–ª—ë–Ω—ã–π", description="–°–ø–æ–∫–æ–π–Ω—ã–π –∫–∞–∫ –ø—Ä–∏—Ä–æ–¥–∞.", emoji="üü¢"),
            disnake.SelectOption(label="–°–∏–Ω–∏–π", description="–û–±—â–∏—Ç–µ–ª—å–Ω—ã–π –∫–∞–∫ –≤–æ–¥–∞.", emoji="üîµ"),
            disnake.SelectOption(label="–§–∏–æ–ª–µ—Ç–æ–≤—ã–π", description="–í–Ω–µ–∑–∞–ø–Ω—ã–π –∫–∞–∫ –º–æ–ª–Ω–∏—è.", emoji="üü£")
        ]

        super().__init__(
            placeholder="–¶–≤–µ—Ç",
            min_values=1,
            max_values=1,
            options=options
        )
    async def callback(self, inter: disnake.MessageInteraction):
        await inter.response.send_message(f"–í–∞—à —ç–ª–µ–º–µ–Ω—Ç —Ç–µ–ø—Ä—å {self.values[0]}", ephemeral=True)

class DropdownView(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(Dropdown())

class UITestsCMD(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name="–≠–ª–µ–º–µ–Ω—Ç")
    async def changeElement(self, ctx):
        await ctx.send("–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –≤–∞—à–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:", view=DropdownView())

    @commands.command(name="–ò–≥—Ä–∞—Ç—å")
    async def ask_play(self, ctx):
        view = Confirm()
        await ctx.send("–ë—Ä–æ, –≥–æ –∏–≥—Ä–∞—Ç—å –¥–æ 3:33?", view=view)
        await view.wait()
        if view.value is not None:
            await ctx.send("–û–∫–µ, –∏–≥–Ω–æ—Ä—â–∏–∫, —è —Å–∞–º –ø–æ—à—ë–ª.")
    
def setup(bot):
    bot.add_cog(UITestsCMD(bot))